generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id @default(uuid())
  email         String        @unique
  password      String
  name          String
  role          Role
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  assignedTasks Task[]        @relation("TaskAssignee")
  createdTasks  Task[]        @relation("TaskCreator")
  taskHistories TaskHistory[]
}

model Task {
  id           String        @id @default(uuid())
  title        String
  description  String
  status       TaskStatus    @default(NOT_STARTED)
  createdById  String
  assignedToId String?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  assignedTo   User?         @relation("TaskAssignee", fields: [assignedToId], references: [id])
  createdBy    User          @relation("TaskCreator", fields: [createdById], references: [id])
  histories    TaskHistory[]
}

model TaskHistory {
  id               String      @id @default(uuid())
  taskId           String
  userId           String
  previousStatus   TaskStatus?
  newStatus        TaskStatus?
  previousTitle    String?
  newTitle         String?
  previousDesc     String?
  newDesc          String?
  previousAssignee String?
  newAssignee      String?
  action           String
  timestamp        DateTime    @default(now())
  task             Task        @relation(fields: [taskId], references: [id])
  user             User        @relation(fields: [userId], references: [id])
}

enum Role {
  LEAD
  TEAM
}

enum TaskStatus {
  NOT_STARTED
  ON_PROGRESS
  DONE
  REJECT
}
